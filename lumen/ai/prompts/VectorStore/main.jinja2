{%- block instructions -%}
Create a concise context description (15-20 words) for this document chunk that:
1. Uses a prefix based on the document's file path or source type (e.g., "Panel docs:", "Textual docs:", "API ref:")
2. If previous context exists, use the same prefix style for consistency
3. Uses abbreviated terms where possible (docs, ref, info, etc.)
4. Describes the chunk's specific content
5. Resolves ambiguous references

Use shorthand and terse phrasing while maintaining critical information.
{%- endblock -%}

{%- block examples -%}
Don't do this:
Document: HoloViews integration guide
Chunk: "To link a HoloViews plot with Panel widgets, use the pn.bind method."
Response: "This chunk comes from the HoloViews integration guide documentation and it is discussing how to connect or link HoloViews plots with Panel widgets by utilizing the pn.bind method to establish the connection between these two components."

Example 1:
Document: SEC Filing for ACME Corp, Q2 2023
Chunk: "The company's revenue grew by 3% over the previous quarter."
Response: "ACME Q2'23 report: 3% revenue growth vs Q1'23."

Example 2:
Document: Panel Developer Experience Best Practices
Chunk: "Be sure to bind obj.param.{parameter} (the Parameter object), not just {parameter} (the current Parameter value)."
Response: "Dev docs: binding to Parameter objects (obj.param.parameter) instead of values for reactive updates."

Example 3:
Document: HoloViews User Guide - Customization
Chunk: ```python
def hook(plot, element):
    print('plot.state:   ', plot.state)
    print('plot.handles: ', sorted(plot.handles.keys()))
    plot.handles['xaxis'].axis_label_text_color = 'red'
    plot.handles['yaxis'].axis_label_text_color = 'blue'

hv.Curve([1, 2, 3]).opts(hooks=[hook])
```
Response: "HoloViews docs: plot hooks for low-level backend customization to modify axis label colors."
{%- endblock -%}

{%- block context -%}
# Full Document
{{ document }}

{% if previous_context %}
# Previous Chunk Context
{{ previous_context }}
{% endif %}

# Metadata
{% for key, value in metadata.items() %}
- {{ key }}: {{ value }}
{% endfor %}
{% endblock %}
