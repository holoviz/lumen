{% extends 'BaseViewAgent/main.jinja2' %}

{% block instructions %}
Generate complete, effective Vega-Lite visualizations that clearly communicate data insights.

# ESSENTIAL STRUCTURE

Every visualization must:
- Alwys use layer array
- Focus on ONE primary metric or relationship per chart
- Include narrative titles that highlight key insights from the data
- Do not overcrowd the plot with too many data points, especially for bars

# MARK vs ENCODING

This is the most common source of errors. Properties belong in different places:
**Mark** (static styling): Position (`dx`, `dy`, `align`, `baseline`) and style (`color`, `opacity`, `fontSize`) go here
```yaml
mark: {type: text, align: left, dx: 3, color: black}
```

**Encoding** (data mappings): Fields and channels (`x`, `y`, `color`, `size`, `text`) go here
```yaml
encoding:
  x: {field: year, type: quantitative}
  color: {value: 'blue'}  # Static values need {value: ...}
```

# LEGENDS

Legends appear when you map data to `color`, `size`, or `shape` in encoding.
**Single field**: Map directly
**Multiple series**: Use `transform` to create a constant field, then map it (never use `datum` in color encoding)

# READABILITY

Focus on clear data presentation and meaningful titles.

# KEY PATTERNS

**Sort rankings**: `sort: "-x"` (horizontal) or `sort: "-y"` (vertical) on the categorical axis
**Color purposefully**: Encode dimensions, highlight outliers/leaders, or show thresholds. Keep color in `mark` for text labels that shouldn't appear in legends.
**Informative titles**: Main title states what's shown, subtitle reveals the key insight or pattern
**Data types**: Match type to your data - quantitative for continuous, ordinal for ordered categories, nominal for unordered, temporal for dates
{% endblock %}

{% block examples %}
# EXAMPLES
{% if doc_examples is defined and doc_examples %}
{% for example in doc_examples %}
{{ example }}
{% endfor %}
{% endif %}
## Bar chart with conditional color:
```yaml
layer:
  - mark: bar
    encoding:
      y: {field: state, type: nominal, sort: "-x", axis: {title: State}}
      x: {field: turbine_count, type: quantitative, axis: {title: Number of Turbines}}
      color:
        condition: {test: "datum.state === 'TX'", value: '#1f77b4'}
        value: '#aec7e8'
      tooltip:
        - {field: state, type: nominal, title: State}
        - {field: turbine_count, type: quantitative, title: Turbines, format: ",d"}
title:
  anchor: start
  text: Wind Turbine Deployment by State
  subtitle: Texas leads with over 15,000 turbines deployed
  subtitleColor: '#666666'
```

Simple bar chart (flat structure):
```yaml
title:
  anchor: start
  subtitle: "Texas leads with over 15,000 turbines deployed"
  subtitleColor: '#666666'
  text: "Wind Turbine Deployment by State"
mark: bar
encoding:
  y:
    field: state
    type: nominal
    sort: "-x"
    axis:
      title: "State"
  x:
    field: turbine_count
    type: quantitative
    axis:
      title: "Number of Turbines"
  color:
    condition:
      test: "datum.state === 'TX'"
      value: '#1f77b4'
    value: '#aec7e8'
  tooltip:
    - field: state
      type: nominal
      title: State
    - field: turbine_count
      type: quantitative
      title: Turbines
      format: ",d"
```
{% endblock %}

{% block errors %}
{{ super() }}

{% if errors is defined and errors %}
For extra context, here are the data and columns available:
{{ columns_context }}
{% endif %}
{% endblock %}
