{% extends 'BaseViewAgent/main.jinja2' %}

{% block instructions %}
Generate complete, effective Vega-Lite visualizations that clearly communicate data insights.

# ESSENTIAL STRUCTURE

Every visualization must:
- Use `data: {name: {{ memory['table'] }}}` with exact column names from source
- Wrap all marks in a `layer` array, each with its own `mark` and `encoding`
- Focus on ONE primary metric or relationship per chart
- Include narrative titles that highlight key insights from the data
- Do not overcrowd the plot with too many data points, especially for bars

# MARK vs ENCODING

This is the most common source of errors. Properties belong in different places:

**Mark** (static styling): Position (`dx`, `dy`, `align`, `baseline`) and style (`color`, `opacity`, `fontSize`) go here
```yaml
mark: {type: text, align: left, dx: 3, color: black}
```

**Encoding** (data mappings): Fields and channels (`x`, `y`, `color`, `size`, `text`) go here
```yaml
encoding:
  x: {field: year, type: quantitative}
  color: {value: 'blue'}  # Static values need {value: ...}
```

# LEGENDS

Legends appear when you map data to `color`, `size`, or `shape` in encoding.

**Single field**: Map directly
**Multiple series**: Use `transform` to create a constant field, then map it (never use `datum` in color encoding)

# KEY PATTERNS

**Sort rankings**: `sort: "-x"` (horizontal) or `sort: "-y"` (vertical) on the categorical axis

**Color purposefully**: Encode dimensions, highlight outliers/leaders, or show thresholds. Keep color in `mark` for text labels that shouldn't appear in legends.

**Informative titles**: Main title states what's shown, subtitle reveals the key insight or pattern

**Data types**: Match type to your data - quantitative for continuous, ordinal for ordered categories, nominal for unordered, temporal for dates
{% endblock %}

{% block examples %}
# EXAMPLES
{% if doc_examples is defined and doc_examples %}
{% for example in doc_examples %}
{{ example }}
{% endfor %}
{% endif %}

Simple time series:
```yaml
title:
  anchor: start
  fontSize: 20
  subtitle: "Steady growth trend from 2010 to 2024"
  subtitleColor: '#666666'
  subtitleFontSize: 16
  text: "Wind Turbine Capacity Over Time"
data:
  name: <TABLE_NAME>
layer:
  - mark:
      type: line
      point: true
    encoding:
      x: {field: year, type: quantitative}
      y: {field: avg_capacity, type: quantitative}
```

Ranked bar chart with highlighting:
```yaml
title:
  anchor: start
  fontSize: 20
  subtitle: "Texas leads with over 15,000 turbines deployed"
  subtitleColor: '#666666'
  subtitleFontSize: 16
  text: "Wind Turbine Deployment by State"
data:
  name: <TABLE_NAME>
layer:
  - mark: bar
    encoding:
      y:
        field: state
        type: nominal
        sort: "-x"
        axis:
          title: "State"
      x:
        field: turbine_count
        type: quantitative
        axis:
          title: "Number of Turbines"
      color:
        condition:
          test: "datum.state === 'TX'"
          value: '#1f77b4'
        value: '#aec7e8'
```

Bar chart with legend (single data field):
```yaml
title:
  text: "Sales by Category"
data:
  name: <TABLE_NAME>
layer:
  - mark: bar
    encoding:
      x:
        field: category
        type: nominal
      y:
        field: sales
        type: quantitative
      color:
        field: category
        type: nominal
        legend:
          title: "Category"
          orient: "right"
```

Dual-axis chart with legend (multiple series):
```yaml
title:
  text: "Growth Metrics Over Time"
data:
  name: <TABLE_NAME>
layer:
  - transform:
    - calculate: "'Revenue'"
      as: metric_name
    mark:
      type: line
      point: true
    encoding:
      x:
        field: year
        type: quantitative
      y:
        field: revenue
        type: quantitative
        axis:
          title: "Revenue ($M)"
      color:
        field: metric_name
        type: nominal
        scale:
          domain: ["Revenue", "Profit"]
          range: ['#1f77b4', '#ff7f0e']
        legend:
          title: "Metric"
          orient: "top-right"
  - transform:
    - calculate: "'Profit'"
      as: metric_name
    mark:
      type: line
      point: true
    encoding:
      x:
        field: year
        type: quantitative
      y:
        field: profit
        type: quantitative
        axis:
          title: "Profit ($M)"
      color:
        field: metric_name
        type: nominal
        scale:
          domain: ["Revenue", "Profit"]
          range: ['#1f77b4', '#ff7f0e']
        legend:
          title: "Metric"
          orient: "top-right"
```

Top 10 bar chart with transform:
```yaml
title:
  text: "Top 10 Cities by Average Fare"
  subtitle: "Showing highest-cost destinations"
data:
  name: <TABLE_NAME>
transform:
  - window:
      - op: row_number
        as: row_number
  - filter: datum.row_number <= 10
layer:
  - mark: bar
    encoding:
      y:
        field: city
        type: nominal
        sort: "-x"
      x:
        field: avg_fare
        type: quantitative
```
{% endblock %}

{% block errors %}
{{ super() }}

{% if errors is defined and errors %}
For extra context, here are the data and columns available:
{{ columns_context }}
{% endif %}
{% endblock %}
