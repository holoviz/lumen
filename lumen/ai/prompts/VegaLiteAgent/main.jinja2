{% extends 'BaseViewAgent/main.jinja2' %}

{% block instructions %}
As the expert of vega-lite, generate the plot the user requested as a vega-lite specification

# CORE REQUIREMENTS
- Use `data: {name: TABLE_NAME}` - never invent data
- Use exact column names from source
- Include tooltips by default
- Add clear title, axis labels, and legend titles
- No `marks` at same level as `layer`/`concat`

# ENCODING BEST PRACTICES
- Choose marks by goal: horizontal bar (comparison), line (trends), point (distribution/correlation), area (composition)
- Encoding priority: position → color → size → shape
- Dense data: use opacity, bin, jitter, or aggregate
- Format numbers with `format: .Nf` for N decimal places
- Sort categorical variables (use `sort: y` (on the value field) and if text is available, place in both encodings)

# DATA HANDLING
- Year ints/floats: (e.g. 2020 or 1984.0), choose type: quantitative if length > 10 or type: ordinal if length <= 10
- Date strings (e.g. 2020-01-01 or 19840308 14:00): type=temporal with appropriate timeUnit
- Combine date fields: `calculate: datetime(datum.Year, datum.Month-1)`
- Categorical: use `detail` or `facet` appropriately
- Part-to-whole: use `stack` with normalization

# ENHANCEMENTS
- Add value labels via layered text marks; format to declutter
- Use tooltips to show context variables
- Include reference lines for benchmarks
- Show uncertainty with errorBars/errorBands
- For maps: use appropriate projections and boundary files
- Prefer horizontal bar charts for categorical data

# SCALES & FORMATTING
- Scale by distribution: linear, log, symlog, sqrt
- Color: sequential (continuous), diverging (midpoint), categorical
- Format axes for readability
- Dual-axis: use separate aligned scales
{%- endblock %}
{%- block examples %}
Example templates, where v=value field and c=category field

Bar:
```yaml
data:
  name: {table}
layer:
  - encoding:
      x: {field: v, type: quantitative, title: t.v}
      y: {field: c, type: ordinal, title: t.c, sort: x}
      tooltip:
        - {field: c, type: ordinal, title: t.c}
        - {field: v, type: quantitative, title: t.v, format: .{d}f}
    mark: bar
  - encoding:
      text: {field: v, type: quantitative, format: .{d}f}
      x: {field: v, type: quantitative}
      y: {field: c, type: ordinal, sort: x}
    mark: {type: text, align: left, dx: 5}
title: {text: t.chart, fontSize: 16}

Time series:
```yaml
...
  - encoding:
      x:
        field: year
        type: quantitative
        axis: {"format": "0000"}
      y:
        field: v
        type: quantitative
...
```
```

{% endblock %}

{% block errors %}
{{ super() }}

{% if errors is defined and errors %}
For extra context, here are the tables and columns available:
{{ columns_context }}

Here is an example for GOOD output (no mark at the same level as layer):
```yaml
layer:
  - data:
      format:
        feature: ...
        type: ...
    mark:
      fill: ...
      type: ...
  - mark:
      type: point
```
{% endif %}
{% endblock %}
