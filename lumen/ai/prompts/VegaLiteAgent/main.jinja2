{% extends 'Actor/main.jinja2' %}

{% block context %}
SQL table: {{ memory['table'] }}

Dataset:
{{ memory.data }}
{% endblock %}

{% block instructions %}
Create visualization layout plans that break complex multi-plot requests into independent, parallelizable chart specs.
If the user's request is ambiguous, create subplots of related metrics to provide a comprehensive view.

# WHEN TO USE LAYOUTS

**Use layouts for:**
- Multiple metrics/dimensions needing separate plots ("show X and Y")
- Comparisons across different visualizations
- Dashboard arrangements
- Side-by-side views or overview + detail

**Use single plots with:**
- Multiple series (layer instead)
- Simple overlays (layer instead)
- Shared axes (color/faceting instead)

# LAYOUT TYPES

**hconcat** (side-by-side): Comparing metrics at same level (revenue vs profit)

**vconcat** (stacked): Hierarchical/sequential relationships (overview above, detail below)

**Grid** (vconcat of hconcats): Dashboard with balanced information density

# RECOGNIZING DATA PATTERNS

**Single row with multiple metrics** (e.g., 1 row, 4 columns like total_revenue, total_orders, avg_price, profit):
→ Use KPI cards in hconcat (side-by-side dashboard)

**Multiple rows, few columns** (e.g., 10 rows, 2-3 columns like category, revenue, count):
→ Use bar/line charts to show distribution/comparison

**Time series** (date/timestamp column with metrics):
→ Use line charts (single metric) or hconcat (compare multiple metrics)

# SINGLE DATA POINTS / KPI CARDS

For single values or aggregated metrics, use dashboard-style KPI cards with colored backgrounds and large text.
Each card uses a layer with a colored rectangle background and centered text overlay.

# PLOT INSTRUCTIONS

Each instruction must be self-contained with: mark type, x/y axes (field, type, aggregation), encodings (color, size, tooltip), transforms (sort, filter, group, top-N), and styling.

# SLUGS

Descriptive and unique: `monthly_revenue_trend`, `top_10_products_bar`, `category_distribution_pie`

Avoid generic: `plot1`, `chart_a`, `visualization`
{% endblock %}

{% block examples %}
# EXAMPLES

## Side-by-side comparison:
User: "Show me revenue and profit trends over the last year"

```yaml
chain_of_thought: Two time-series of equal importance. Side-by-side (hconcat) for easy comparison with same time scale.

overall_title: Revenue and Profit Trends - Last 12 Months

plots:
  - slug: monthly_revenue_trend
    instruction: |
      Line chart. X: 'month' (temporal). Y: 'revenue' (quantitative, sum). 
      Blue line (#1f77b4) with circular points. Tooltips: month and revenue (currency format). 
      Filter last 12 months. Title: "Monthly Revenue"
    
  - slug: monthly_profit_trend  
    instruction: |
      Line chart. X: 'month' (temporal). Y: 'profit' (quantitative, sum). 
      Orange line (#ff7f0e) with circular points. Tooltips: month and profit (currency format). 
      Filter last 12 months. Title: "Monthly Profit"

rows:
  - plot_slugs: [monthly_revenue_trend, monthly_profit_trend]
```

## Grid layout (2 + 1):
User: "Show distributions of input tokens, output tokens, and response times"

```yaml
chain_of_thought: Input/output tokens are related (side-by-side for comparison). Response time is different metric type (full-width row for detail).

overall_title: GPT-4o Mini Token Usage Analysis

plots:
  - slug: input_tokens_distribution
    instruction: |
      Histogram. X: 'input_tokens' (quantitative, binned). Y: count (quantitative, count). 
      Blue bars. Tooltips: bin range and count. Title: "Input Tokens Distribution"
    
  - slug: output_tokens_distribution
    instruction: |
      Histogram. X: 'output_tokens' (quantitative, binned). Y: count (quantitative, count). 
      Blue bars. Tooltips: bin range and count. Title: "Output Tokens Distribution"
    
  - slug: response_time_distribution
    instruction: |
      Histogram. X: 'response_time' (quantitative, binned). Y: count (quantitative, count). 
      Blue bars. Tooltips: bin range and count. Title: "Response Time Distribution"

rows:
  - plot_slugs: [input_tokens_distribution, output_tokens_distribution]
  - plot_slugs: [response_time_distribution]
```

## Dashboard (KPIs + detail):
User: "Show me total sales, number of orders, and a breakdown by category"

```yaml
chain_of_thought: Classic dashboard: summary KPIs side-by-side at top, detailed breakdown full-width below.

overall_title: Sales Overview Dashboard

plots:
  - slug: total_sales_kpi
    instruction: |
      Single-value text. Sum of 'sales_amount' (quantitative) as large number (32px font). 
      Currency format. Title: "Total Sales". Center value.
    
  - slug: order_count_kpi
    instruction: |
      Single-value text. Count of 'order_id' as large number (32px font). 
      Title: "Total Orders". Center value.
    
  - slug: sales_by_category
    instruction: |
      Horizontal bar chart. Y: 'category' (nominal, sort by x descending). 
      X: 'sales_amount' (quantitative, sum). Conditional color to highlight top category. 
      Tooltips: category and sales (currency). Title: "Sales by Product Category"

rows:
  - plot_slugs: [total_sales_kpi, order_count_kpi]
  - plot_slugs: [sales_by_category]
```

## KPI Dashboard (single values):
User: "Show me total revenue, total orders, and total profit"

```yaml
chain_of_thought: Three single aggregated values. Use dashboard-style KPI cards with colored backgrounds.

overall_title: Key Performance Indicators

plots:
  - slug: total_revenue_kpi
    instruction: |
      KPI card with colored background. Layer 1: Blue rectangle (#1f77b4) background (0,0 to 200,100).
      Layer 2: White text (fontSize: 36, fontWeight: bold) centered at (100,50).
      Text: sum of 'revenue' (quantitative, currency format).
    
  - slug: total_orders_kpi
    instruction: |
      KPI card with colored background. Layer 1: Orange rectangle (#ff7f0e) background (0,0 to 200,100).
      Layer 2: White text (fontSize: 36, fontWeight: bold) centered at (100,50).
      Text: count of 'order_id' (quantitative, comma format).
    
  - slug: total_profit_kpi
    instruction: |
      KPI card with colored background. Layer 1: Green rectangle (#2ca02c) background (0,0 to 200,100).
      Layer 2: White text (fontSize: 36, fontWeight: bold) centered at (100,50).
      Text: sum of 'profit' (quantitative, currency format).

rows:
  - plot_slugs: [total_revenue_kpi, total_orders_kpi, total_profit_kpi]
```
{% endblock %}
