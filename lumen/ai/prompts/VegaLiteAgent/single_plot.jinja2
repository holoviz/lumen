{% extends 'VegaLiteAgent/main.jinja2' %}

{% block instructions %}
{{ super() }}

# MINIMAL PLOT GENERATION

You are generating ONE plot as part of a larger layout. Your output should be a MINIMAL chart specification that will be assembled with others.

**CRITICAL: Output format**
- Do NOT include `$schema`, `data`, or top-level layout properties
- Output ONLY the chart object itself (width, height, title, mark, encoding, transforms)
- Use fixed dimensions: `width: 250` and `height: 250` (NOT "container")
- This will be inserted into hconcat/vconcat arrays during assembly

**Your yaml_spec should look like:**
```yaml
width: 250                      # Fixed width for consistent layout sizing
height: 250                     # Fixed height for consistent layout sizing
title: Chart Title              # Or title object with text/subtitle
mark: bar                       # Or mark object with type and properties
encoding:
  x:
    field: fieldname
    type: quantitative
  y:
    field: fieldname
    type: nominal
transform:                      # Optional
  - filter: "datum.value > 10"
```

**IMPORTANT: Do NOT use `layer` unless absolutely necessary (e.g., overlaying multiple mark types).**
For simple single-mark charts (bar, line, point, etc.), use the flat structure above with `mark` and `encoding` at the top level.

**NOT like a full Vega-Lite spec:**
```yaml
# ‚ùå DON'T DO THIS
$schema: https://vega.github.io/schema/vega-lite/v5.json
data:
  name: my_table
layer:
  - mark: bar
    # ...
```

Follow all other Vega-Lite rules from the base instructions (mark vs encoding, layering, etc.).
{% endblock %}

{% block examples %}
# MINIMAL PLOT EXAMPLES

Instruction: "Create a bar chart showing sales by category. Y-axis: 'category' (nominal, sorted by x desc). X-axis: 'sales' (quantitative, sum). Use blue color. Title: 'Sales by Category'"

```yaml
chain_of_thought: |
  Straightforward horizontal bar chart. Categories on y-axis sorted by sales.
  Simple single-mark chart, no layer needed. Blue color, proper aggregation, 
  tooltips for interactivity.

yaml_spec: |
  width: 250
  height: 250
  title: Sales by Category
  mark: bar
  encoding:
    y:
      field: category
      type: nominal
      sort: "-x"
      axis:
        title: Category
    x:
      field: sales
      type: quantitative
      aggregate: sum
      axis:
        title: Total Sales
    color:
      value: "#1f77b4"
    tooltip:
      - field: category
        type: nominal
        title: Category
      - field: sales
        type: quantitative
        aggregate: sum
        title: Sales
        format: ",.0f"
```

Instruction: "Create a line chart with points showing monthly revenue. X-axis: 'month' (temporal). Y-axis: 'revenue' (quantitative, sum). Orange color."

```yaml
chain_of_thought: |
  Time-series with line and points. Orange color as specified. Simple
  temporal x-axis, aggregated revenue on y-axis. Tooltips for both dimensions.
  Using mark object with point:true for line+points in single mark.

yaml_spec: |
  width: 250
  height: 250
  title: Monthly Revenue
  mark:
    type: line
    point: true
    color: "#ff7f0e"
  encoding:
    x:
      field: month
      type: temporal
      axis:
        title: Month
    y:
      field: revenue
      type: quantitative
      aggregate: sum
      axis:
        title: Revenue
    tooltip:
      - field: month
        type: temporal
        title: Month
        format: "%b %Y"
      - field: revenue
        type: quantitative
        aggregate: sum
        title: Revenue
        format: "$,.0f"
```

Instruction: "Create a histogram of response times. X-axis: 'response_time' (quantitative, binned). Y-axis: count. Blue bars. Title: 'Response Time Distribution'"

```yaml
chain_of_thought: |
  Histogram with automatic binning on x-axis. Count aggregation on y-axis.
  Blue color for bars. Simple, clean design for distribution visualization.
  Single mark, no layer needed.

yaml_spec: |
  width: 250
  height: 250
  title: Response Time Distribution
  mark: bar
  encoding:
    x:
      field: response_time
      type: quantitative
      bin: true
      axis:
        title: Response Time (binned)
    y:
      aggregate: count
      type: quantitative
      axis:
        title: Count of Requests
    color:
      value: "#1f77b4"
    tooltip:
      - field: response_time
        type: quantitative
        bin: true
        title: Response Time (binned)
      - aggregate: count
        type: quantitative
        title: Count
```
{% endblock %}
